{
    "COMPRESS-287": {
        "commit": "7e6c7136cf0165f107daf8f9f1818c7d9c9fcc27",
        "stack_trace": "Caused by: java.io.IOException: kDummy is unsupported, please report\nat org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:711)\nat org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:242)\nat org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:198)\nat org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:95)\nat org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:117)\nat org.apache.tika.parser.pkg.PackageParser.parse(PackageParser.java:133)\nat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)"
    },
    "COMPRESS-29": {
        "commit": "e707c8233405d1a2eda96649f0fbcb10b623386b",
        "stack_trace": "java.lang.ArithmeticException: / by zero\n\tat org.apache.tools.bzip2.CBZip2OutputStream.mainSort(CBZip2OutputStream.java:1174)\n\tat org.apache.tools.bzip2.CBZip2OutputStream.doReversibleTransformation(CBZip2OutputStream.java:1386)\n\tat org.apache.tools.bzip2.CBZip2OutputStream.endBlock(CBZip2OutputStream.java:476)\n\tat org.apache.tools.bzip2.CBZip2OutputStream.close(CBZip2OutputStream.java:427)\n\tat CBZip2OutputStreamTest.testEmtpyOutput(CBZip2OutputStreamTest.java:23)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)"
    },
    "COMPRESS-452": {
        "commit": "7a34528b18b5ebdd33089a9b330206ccae56a9a0",
        "stack_trace": "Exception in thread \"main\" java.io.IOException: Stream is not in the BZip2 format\r\n \u00a0at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.init(BZip2CompressorInputStream.java:252)\r\n \u00a0at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.<init>(BZip2CompressorInputStream.java:134)\r\n \u00a0at org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.<init>(BZip2CompressorInputStream.java:112)\r\n \u00a0at org.apache.commons.compress.archivers.sevenz.Coders$BZIP2Decoder.decode(Coders.java:254)\r\n \u00a0at org.apache.commons.compress.archivers.sevenz.Coders.addDecoder(Coders.java:79)\r\n \u00a0at org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecoderStack(SevenZFile.java:933)\r\n \u00a0at org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecodingStream(SevenZFile.java:909)\r\n \u00a0at org.apache.commons.compress.archivers.sevenz.SevenZFile.getNextEntry(SevenZFile.java:222)\r\n \u00a0at UnpackTest.main(UnpackTest.java:17)\r"
    },
    "COMPRESS-505": {
        "commit": "ff5782a89d44d731bda560ae5938d6603d57deb5",
        "stack_trace": "Exception in thread \"main\" java.io.IOException: Checksum verification failed\r\n    at org.apache.commons.compress.utils.ChecksumVerifyingInputStream.read(ChecksumVerifyingInputStream.java:61)\r\n    at org.apache.commons.compress.utils.ChecksumVerifyingInputStream.skip(ChecksumVerifyingInputStream.java:102)\r\n    at org.apache.commons.compress.utils.IOUtils.skip(IOUtils.java:113)\r\n    at org.apache.commons.compress.archivers.sevenz.SevenZFile.getCurrentStream(SevenZFile.java:1318)\r\n    at org.apache.commons.compress.archivers.sevenz.SevenZFile.getInputStream(SevenZFile.java:1354)\r\n    at org.abitoff.dmav.Test.main(Test.java:11)\r"
    },
    "COMPRESS-7": {
        "commit": "75c871141d7505bb25b8d1e272097997be0ba32a",
        "stack_trace": "java.io.IOException request to write '8192' bytes exceeds size in header of '1390354048' bytes\n    at org.apache.commons.compress.tar.TarOutputStream.write(TarOutputStream.java:-3)\n    at java.nio.channels.Channels$WritableByteChannelImpl.write(Channels.java:-3)\n    at org.archivas.io.TransferSupport.writeBuffer(TransferSupport.java:-3)\n    at org.archivas.io.TransferSupport.writeChunk(TransferSupport.java:-4)"
    },
    "COMPRESS-8": {
        "commit": "98e8e5addf8369cc92d1ceda1113009316d86c11",
        "stack_trace": "Exception in thread \"main\" java.io.FileNotFoundException: Z:\\longPaths (Access is denied)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:106)\n        at org.apache.commons.compress.AbstractArchive.add(AbstractArchive.java:90)\n        at bb.io.TarUtil.archive(TarUtil.java:412)\n        at bb.io.TarUtil.archive(TarUtil.java:339)\n        at bb.io.TarUtil$Test.test_archive_extract_pathLengthLimit(TarUtil.java:711)\n        at bb.io.TarUtil$Test.main(TarUtil.java:594)"
    }
}